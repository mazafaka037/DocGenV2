name: Build macOS .app

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install system deps (brew)
        run: |
          # Обычно на runner'е Tcl/Tk уже есть; оставлю комментарии на случай
          which brew || /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || true
          brew --version || true

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install pyinstaller==5.13.0

      - name: Run tests (optional)
        run: |
          echo "No tests configured"

      - name: Build .app with PyInstaller
        env:
          PYTHONWARNINGS: ignore
        run: |
          set -e
          rm -rf build dist
          APP_NAME="DocGen"

          # Пример --add-data: перечислите все runtime-файлы/папки (docx, json, templates, icons и т.д.)
          # Формат на mac/linux: "src:dest"
          pyinstaller \
            --noconfirm \
            --windowed \
            --name "${APP_NAME}" \
            --add-data "template_permit.docx:." \
            --add-data "template_spisok.docx:." \
            --add-data "template_order.docx:." \
            --add-data "template_pb_order.docx:." \
            --add-data "templates.json:." \
            --add-data "collections.json:." \
            --add-data "templates/:templates" \
            --clean \
            docgen_v2.py

          echo "PyInstaller exit code: $?"

      - name: Inspect dist and app contents
        run: |
          APP_NAME="DocGen"
          if [ -d "dist/${APP_NAME}.app" ]; then
            echo "dist/${APP_NAME}.app exists"
            file "dist/${APP_NAME}.app/Contents/MacOS/${APP_NAME}" || true
            echo "List Resources:"
            ls -la "dist/${APP_NAME}.app/Contents/Resources" || true
            # Проверить, что шаблоны попали
            ls -la "dist/${APP_NAME}.app/Contents/Resources/templates" || true
          else
            echo "ERROR: expected dist/${APP_NAME}.app but it was not produced"
            ls -la dist || true
            exit 1
          fi

      - name: Prepare artifact (.zip)
        run: |
          set -e
          APP_NAME="DocGen"
          mkdir -p out
          if [ -d "dist/${APP_NAME}.app" ]; then
            ditto -c -k --sequesterRsrc --keepParent "dist/${APP_NAME}.app" "out/${APP_NAME}-macos.zip"
            ls -l out
            unzip -l "out/${APP_NAME}-macos.zip" | head -n 40 || true
          else
            echo "ERROR: expected dist/${APP_NAME}.app but it was not produced"
            ls -la dist || true
            exit 1
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: DocGen-macos
          path: out/*.zip
